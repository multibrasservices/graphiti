# docker-compose.yml - Version finale avec healthcheck pour Caddy

services:
  caddy:
    build:
      context: ./caddy_config
    restart: unless-stopped
    depends_on:
      - graph
    expose:
      - "80"
    # On n'a plus besoin de la section 'volumes'.
    environment:
      - BASIC_AUTH_USER=${BASIC_AUTH_USER}
      - BASIC_AUTH_PASS=${BASIC_AUTH_PASS}
    labels:
      - "coolify.port=80"
      
    # --- AJOUT ICI ---
    # On dit à Coolify comment vérifier que Caddy est en vie.
    # On essaie simplement de se connecter au port 80.
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5

  graph:
    build:
      context: .
    expose:
      - "8000"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${GRAPH_SERVICE_USER}
      - NEO4J_PASSWORD=${GRAPH_SERVICE_PASSWORD}
      - PORT=8000

  neo4j:
    image: neo4j:5.26.2
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:7474 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}

volumes:
  neo4j_data:```

#### Actions Finales

1.  **Mettez à jour votre `docker-compose.yml`** sur GitHub avec ce dernier code.
2.  **Redéployez sur Coolify.**

Cette fois, Coolify va démarrer le conteneur Caddy, puis il va utiliser la commande `curl` pour vérifier qu'il répond bien. Une fois que le healthcheck sera "healthy", il le connectera à son proxy principal. L'erreur 502 disparaîtra et sera remplacée par la fenêtre d'authentification.

C'est la toute dernière étape. Nous avons éliminé tous les problèmes un par un.

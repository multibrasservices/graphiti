# docker-compose.yml mis à jour pour Coolify

services:
  graph:
    build:
      context: .
    # --- MODIFICATION CLÉ ---
    # La section 'ports' est supprimée. En la retirant, on empêche Docker
    # d'exposer directement le port sur l'IP du serveur. C'est ce qui permet
    # à Coolify de prendre le contrôle du trafic et d'appliquer le HTTPS.
    #
    # ports:
    #   - "8001:8000"  <-- LIGNE SUPPRIMÉE

    # 'expose' est suffisant. Il déclare que le port 8000 est accessible
    # DEPUIS les autres conteneurs du même réseau, mais PAS depuis l'extérieur.
    expose:
      - "8000"

    # Le label 'coolify.port' est une bonne pratique pour aider Coolify à
    # détecter le port, même si c'est souvent automatique.
    labels:
      - "coolify.port=8000"

    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${GRAPH_SERVICE_USER}
      - NEO4J_PASSWORD=${GRAPH_SERVICE_PASSWORD}
      - PORT=8000

  neo4j:
    image: neo4j:5.26.2
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:7474 || exit 1",
        ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s

    # --- RECOMMANDATION DE SÉCURITÉ ---
    # Pour la production, il est fortement conseillé de supprimer également
    # cette section 'ports'. N'exposez jamais une base de données directement
    # sur Internet. Pour y accéder, privilégiez un tunnel SSH comme nous l'avons fait.
    # Je les laisse ici pour le développement, mais gardez cela en tête.
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt

    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}

volumes:
  neo4j_data:
